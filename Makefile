
# Go to your favorite python interpreter, past this code and run it to get a possible 500 size stack test case
# import random

# def generate_unique_random_list():
#     min_int = -2**31
#     max_int = 2**31 - 1
#     unique_random_list = random.sample(range(min_int, max_int + 1), 500)
#     formatted_list = ' '.join(map(str, unique_random_list))
#     return formatted_list
# formatted_unique_random_list = generate_unique_random_list()
# print(formatted_unique_random_list)
# ARG = 1701697395 255187457 -633182777 -1876735674 1831248505 791347206 1233242903 2124187765 2004639945 205878314 -2126865992 -1869969082 2021214371 1786536056 103423912 -698437564 -299576512 1596795293 255995137 4450040 -1964906799 -144975521 1766972274 557774552 1466850203 -97868924 -563468162 329313192 561288924 -1367592622 113449624 -117621956 -199198922 1962295282 815835003 -1498852857 -253168054 1410060083 2043479303 -1433180626 -1245233225 -1213825651 713497641 -1308864843 45617264 545029313 1155097436 -839704961 -1910236102 -129314164 1084658450 -457746738 372663407 -1979776484 -1455348805 -1379032203 1348860335 -1320753398 -1688195262 -1718645822 266295245 -937719382 -275347099 -1019727462 1781491315 1455918566 -208315668 377896180 -542255194 -1425173912 182430007 369974540 -836176294 752707723 -2061907731 177939447 -1663948349 -369217673 -2089360944 -152396678 659208707 -959081424 -373657033 522032138 -711144111 -1780526745 690119953 1796380373 -1388527487 1324207241 -635976508 300154065 -651497812 -347626578 -336068857 -1492882265 66813204 1480739395 2117218981 728686011 1193324498 694853784 -1401305976 1846883058 2140284606 345880027 227175816 1773115756 -2065481130 1967609528 1153043744 -431665136 105642797 714084572 1876726358 1378763196 -617750992 -1658700574 -1745146405 -853500404 -304417897 -1534537248 -2065775496 -1422528679 -1621378313 1054146822 1483823597 1118297027 1070780559 -570847387 -325420855 1501696194 -1966439859 -1931998699 -1250344197 1139770164 2073838553 879654768 -1935666822 1898944724 -1459657997 2082361389 -347062999 -749028724 -604533426 328675149 450741872 -1238939335 -2146359484 882019899 406945163 -657868185 -834065564 -1331675571 -665641861 -89834445 -1273655746 -1261755852 585532387 -1563359345 1706857959 1980003996 -2580093 -1449565513 1785032552 -1154290930 1689316654 -753586188 115317777 927729932 58179994 723613859 -1946351058 -1549839948 -666050416 -394365133 2017132716 653082183 1297567016 -1395702262 -1342311076 1117975547 100907423 -739222634 2116623290 -2003668180 -1736313476 -1165558530 1972467555 1054264444 1489972897 1724726703 1296254694 -1876194449 650603718 -1658150074 -2041752686 -1037614928 -1159595065 2042160659 952306129 -290582786 2122568569 1475159096 1050642017 1707731982 -1498040126 -892420179 1964732096 -564510952 -1127328964 -1193392235 1999973667 1193666546 1597523008 1697678930 -1624385071 -784465099 411493459 -193338331 -1124777803 840938409 -820930231 502750339 -2044468258 -949376324 -493259698 -279038302 -2054267758 259544166 -630374488 -1544485801 500248804 894136039 -1607636976 813987839 428389079 1216987387 1609483626 1783565986 1938674265 -369198048 2069540778 -68083708 999066299 1585185776 -755767631 54812825 -33668080 251575848 1176214193 1251727487 -1511234316 5575698 -76965406 -175760048 526698329 1833266574 96002332 -768436855 -648911278 175231251 -1502173117 263069719 -240969552 1594550020 -2088470196 -1540198374 2005859664 -571536196 -326913550 -878579535 626951185 547975357 1151655722 -1027153765 950458563 -620340332 635932375 -1232301644 1276540305 1273144821 -2049274020 -1785769934 -1461674103 1315456048 441366427 -888683516 -570888855 1457701529 1830446116 -1980371534 -515976273 125867747 -998277699 2092233457 -1964940168 -907442743 1743729796 1568629559 1680610322 38233201 1332840754 -1366095095 -322359607 1713156907 921097231 -1011126684 -359979477 -372474853 -1653626425 -1873695480 -1809272682 -415325472 -1255155271 -2136951080 598731708 -837736664 1555972383 1209685256 622957442 214350841 -1725617786 -1280250834 675627240 1748311413 -105603187 892695513 2001797106 -1496841243 -1734072459 1124546109 591168474 1471568631 -1530972349 -1056324287 -223038220 -1398994771 2099187246 1787324164 -1213814505 1493862251 411910887 1312073717 -1090497177 -867263466 -1858871820 1175270195 831107600 -1589504441 -905838724 1117348342 154916014 -1644601856 18313325 779824502 328295348 -101924351 737241761 -1239302829 672430339 1949377363 -792232201 -1700984210 1763498720 1100217028 237375158 257131388 1589337700 1929064467 -1216309887 2071456221 685106208 21792929 -826914563 1417115554 -1253770060 -168036870 -949320359 -1527157375 -413827462 -623481434 1700024409 -1037149194 1223153462 -231151177 354625942 -1632896657 1019345764 578994614 584285441 -1269062029 1480529041 1826005397 1369039330 1082594529 573585203 1195969020 1001848861 -1128325242 -1749033596 1038491246 1086179635 150462104 -299535941 705672445 1561679508 -766692170 -1877117237 1289953234 1900212966 2102847983 1636439792 2012900660 199811328 -1912409653 1710549191 -596223319 1033999456 1945218222 2063343757 140493514 1614127130 1053068270 -330046910 1138306509 -517887022 668770922 2008788143 1844449354 -282415979 1861149481 1790741902 1733692457 -1313791742 -1370742737 -460026298 -1715195562 -318962580 -17446580 545172812 -385763386 1200043604 -389865876 2020536432 1271218257 -450167107 -1006597991 -306827140 -2035284024 -2062940413 -1889051588 1956096905 1427962993 -1111252520 -1473472529 900708325 1414966216 -1772297109 404071842 129946924 1799569012 -1855311763 -572451649 299452064 -1071514502 1593008962 282700102 -1722313251 113281142 -1061418502 -1995268940 1647970040 -305589207 -1313350480 -1763309440 362393738 455750368 -381691070 -1931835085 1626450655 1438924447 1174708855 816176480 -536122436 640439032 -1136330649 1671652390 -2063073164 1007457428 -1899415838 -967843246 691185104 72982697 1517365871 1114893089 -2152643 173456277 -1968803102 -1891720798

NAME = push_swap.a
BONUS_NAME = checker.a
CC = cc
CFLAGS = -Wall -Werror -Wextra -Iinclude
LIBC = ar rcs

RM = rm -f
HOME = ./

SRC_DIR		= ./src
OBJ_DIR 	= ./obj
INC_DIR		= ./inc
BIN_DIR		= ./bin
LIB_DIR		= ./lib

LIBFT_DIR 	= ${LIB_DIR}/libft
LIBFT 		= ${LIBFT_DIR}/lib/libft.a

LIB_NAME = ${LIB_DIR}/${NAME}
LIB_BONUS_NAME = ${LIB_DIR}/${BONUS_NAME}
#SRCS := $(shell find ${SRC_DIR}/push_swap -type f -name "*.c")
#SRCS += $(shell find ${SRC_DIR}/stack -type f -name "*.c")
#SRCS += $(shell find ${SRC_DIR}/state -type f -name "*.c")
#SRCS += $(shell find ${SRC_DIR}/moves -type f -name "*.c")
#SRCS_BONUS := $(shell find ${SRC_DIR}/checker_bonus -type f -name "*.c")

SRCS =			${SRC_DIR}/push_swap/array_utils.c ${SRC_DIR}/push_swap/sort.c ${SRC_DIR}/push_swap/sort_small.c 			\
				${SRC_DIR}/push_swap/sort_small_aux.c ${SRC_DIR}/parser/custom_atoi.c 										\
				${SRC_DIR}/parser/parser.c ${SRC_DIR}/push_swap/sort_big.c ${SRC_DIR}/push_swap/sort_big_aux.c 				\
				${SRC_DIR}/push_swap/sort_opti.c ${SRC_DIR}/t_stack/t_stack_free.c ${SRC_DIR}/t_stack/t_stack_init.c 		\
				${SRC_DIR}/t_stack/t_stack_utils.c ${SRC_DIR}/t_stack/t_stack_op.c ${SRC_DIR}/t_state/t_state_free.c 		\
				${SRC_DIR}/t_state/t_state_init.c ${SRC_DIR}/t_state/t_state_utils.c ${SRC_DIR}/t_state/t_state_op.c		\
				${SRC_DIR}/t_move/t_move_free.c ${SRC_DIR}/t_move/t_move_init.c ${SRC_DIR}/t_move/t_move_utils.c 			\
				${SRC_DIR}/t_move/t_move_merge.c ${SRC_DIR}/t_move/t_move_op.c ${SRC_DIR}/push_swap/push_swap.c				\

SRCS_BONUS =	${SRC_DIR}/push_swap/array_utils_bonus.c ${SRC_DIR}/push_swap/sort_bonus.c ${SRC_DIR}/push_swap/sort_small_bonus.c			\
				${SRC_DIR}/push_swap/sort_small_aux_bonus.c ${SRC_DIR}/parser/custom_atoi_bonus.c 											\
				${SRC_DIR}/parser/parser_bonus.c ${SRC_DIR}/push_swap/sort_big_bonus.c ${SRC_DIR}/push_swap/sort_big_aux_bonus.c 			\
				${SRC_DIR}/push_swap/sort_opti_bonus.c ${SRC_DIR}/t_stack/t_stack_free_bonus.c ${SRC_DIR}/t_stack/t_stack_init_bonus.c 		\
				${SRC_DIR}/t_stack/t_stack_utils_bonus.c ${SRC_DIR}/t_stack/t_stack_op_bonus.c ${SRC_DIR}/t_state/t_state_free_bonus.c 		\
				${SRC_DIR}/t_state/t_state_init_bonus.c ${SRC_DIR}/t_state/t_state_utils_bonus.c ${SRC_DIR}/t_state/t_state_op_bonus.c		\
				${SRC_DIR}/t_move/t_move_free_bonus.c ${SRC_DIR}/t_move/t_move_init_bonus.c ${SRC_DIR}/t_move/t_move_utils_bonus.c 			\
				${SRC_DIR}/t_move/t_move_merge_bonus.c ${SRC_DIR}/t_move/t_move_op_bonus.c ${SRC_DIR}/push_swap/checker_bonus.c				\


OBJS = ${patsubst ${SRC_DIR}/%.c, ${OBJ_DIR}/%.o, ${SRCS}}
BONUS_OBJ = ${patsubst ${SRC_DIR}/%.c, ${OBJ_DIR}/%.o, ${SRCS_BONUS}}

all: ${LIB_NAME}

${LIB_NAME}: ${LIBFT} ${OBJS}
	cp ${LIBFT} ${LIB_NAME}
	${LIBC} ${LIB_NAME} ${LIBFT} ${OBJS}
	${CC} ${CFLAGS} ${LIB_NAME} ${LIBFT} -o ${BIN_DIR}/push_swap
	
bonus: ${LIB_BONUS_NAME} 

${LIB_BONUS_NAME}: ${LIBFT} ${BONUS_OBJ} 
	cp ${LIBFT} ${LIB_BONUS_NAME}
	${LIBC} ${LIB_BONUS_NAME} ${LIBFT} ${BONUS_OBJ}
	${CC} ${CFLAGS} ${LIB_DIR}/${BONUS_NAME} ${LIBFT} -o ${BIN_DIR}/checker

${LIBFT}: 
	@${MAKE} -C ${LIBFT_DIR}


${OBJ_DIR}/%.o: ${SRC_DIR}/%.c
	@mkdir -p $(dir $@)
	@${CC} ${CFLAGS} -c $< -o $@


clean:
	@${MAKE} -C ${LIBFT_DIR} clean
	@${RM} ${OBJS}
	@${RM} ${BONUS_OBJ}

fclean:	clean
	@${MAKE} -C ${LIBFT_DIR} fclean
	@${RM} ${LIB_NAME}
	@${RM} ${LIB_DIR}/${BONUS_NAME}

re:	fclean all

run: ${LIB_NAME}
	valgrind ./${BIN_DIR}/push_swap  ${ARG}

run_bonus: ${LIB_NAME} ${BONUS_NAME}
	./${BIN_DIR}/push_swap  ${ARG} | ./${BIN_DIR}/checker ${ARG}

.PHONY: all clean fclean re
